plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'uyu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
	// Snippet 의 생성 위치를 지정
	snippetsDir = file('build/generated-snippets')
}

test {
	// Snippets 디렉토리를 출력으로 작업하도록 설정
	outputs.dir snippetsDir
}

asciidoctor {
	// Snippets 디렉토리를 Input 디렉토리로 설정
	inputs.dir snippetsDir
	// 문서 생성 전 테스트가 실행되도록 test 에 종속 설정
	dependsOn test
}

bootJar {
	// 빌드 전 문서 생성 확인
	dependsOn asciidoctor
	// 생성된 문서를 static/docs 에 복사
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
